[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "arbitrage-nexus"
version = "0.1.0"
description = "High-performance multi-chain arbitrage bot"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Security :: Cryptography",
]
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "web3>=6.11.3",
    "eth-account>=0.9.0",
    "eth-utils>=2.3.1",
    "aiohttp>=3.9.1",
    "requests>=2.31.0",
    "sqlalchemy[asyncio]>=2.0.23",
    "alembic>=1.13.1",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.9",
    "redis[hiredis]>=5.0.1",
    "pandas>=2.1.3",
    "numpy>=1.26.2",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.2",
    "python-dateutil>=2.8.2",
    "pyyaml>=6.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "isort>=5.12.0",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0",
    "bandit>=1.7.6",
    "safety>=2.3.5",
    "coverage>=7.3.2",
]
docs = [
    "sphinx>=7.2.6",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/Cyptopimpinainteazy/claude-super-easy-bot"
Repository = "https://github.com/Cyptopimpinainteazy/claude-super-easy-bot"
Issues = "https://github.com/Cyptopimpinainteazy/claude-super-easy-bot/issues"
Documentation = "https://github.com/Cyptopimpinainteazy/claude-super-easy-bot#readme"

[tool.setuptools]
packages = ["find:"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 127
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 127
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["arbitrage_nexus", "database", "infrastructure"]

[tool.flake8]
max-line-length = 127
max-complexity = 10
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    "venv",
    ".tox",
    ".mypy_cache",
    ".pytest_cache",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
no_strict_optional = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "scripts.*",
]
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.4"
addopts = "-ra -q --cov=arbitrage_nexus --cov-report=html --cov-report=xml --cov-report=term-missing"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["arbitrage_nexus"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "scripts", ".venv"]
skips = ["B101", "B601"]

[tool.safety]
ignore = [
    "12345",  # Example vulnerability ID to ignore
]
